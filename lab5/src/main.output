Terminals unused in grammar

   BOOL


State 67 conflicts: 5 shift/reduce
State 68 conflicts: 5 shift/reduce
State 69 conflicts: 15 shift/reduce
State 71 conflicts: 15 shift/reduce
State 91 conflicts: 1 shift/reduce
State 106 conflicts: 5 shift/reduce
State 107 conflicts: 5 shift/reduce
State 108 conflicts: 5 shift/reduce
State 109 conflicts: 5 shift/reduce
State 110 conflicts: 15 shift/reduce
State 111 conflicts: 15 shift/reduce
State 112 conflicts: 15 shift/reduce
State 113 conflicts: 5 shift/reduce
State 114 conflicts: 5 shift/reduce
State 115 conflicts: 5 shift/reduce
State 116 conflicts: 5 shift/reduce
State 117 conflicts: 5 shift/reduce
State 118 conflicts: 5 shift/reduce
State 133 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | declaration SEMICOLON
    6          | assign_stmt SEMICOLON
    7          | if_stmt
    8          | loop_stmt
    9          | return_stmt SEMICOLON
   10          | io_stmt SEMICOLON
   11          | function

   12 declaration: T IDENTIFIER ASSIGN expr
   13            | T IDENTIFIER_LIST

   14 function: T_INT MAIN LPARE RPARE LBRACE statements RBRACE
   15         | T_VOID MAIN LPARE RPARE LBRACE statements RBRACE
   16         | T IDENTIFIER LPARE RPARE LBRACE statements RBRACE

   17 assign_stmt: IDENTIFIER ASSIGN expr
   18            | IDENTIFIER ADD ASSIGN expr
   19            | IDENTIFIER MINUS ASSIGN expr
   20            | IDENTIFIER MUL ASSIGN expr
   21            | IDENTIFIER DIV ASSIGN expr

   22 if_stmt: IF expr statement
   23        | IF expr LBRACE statements RBRACE
   24        | IF expr statement ELSE statement
   25        | IF expr LBRACE statements RBRACE ELSE statement
   26        | IF expr LBRACE statements RBRACE ELSE LBRACE statements RBRACE
   27        | IF expr statement ELSE LBRACE statements RBRACE

   28 loop_stmt: WHILE expr statement
   29          | WHILE expr LBRACE statements RBRACE
   30          | FOR LPARE statement expr SEMICOLON expr RPARE statement
   31          | FOR LPARE statement expr SEMICOLON expr RPARE LBRACE statements RBRACE

   32 return_stmt: RETURN expr

   33 io_stmt: PRINTF LPARE STRING COMMA IDENTIFIER_LIST RPARE
   34        | PRINTF LPARE IDENTIFIER_LIST RPARE
   35        | SCANF LPARE STRING COMMA IDENTIFIER_LIST RPARE

   36 IDENTIFIER_LIST: IDENTIFIER_LIST COMMA IDENTIFIER
   37                | IDENTIFIER
   38                | IDENTIFIER_LIST COMMA ADDR IDENTIFIER
   39                | ADDR IDENTIFIER

   40 expr: IDENTIFIER
   41     | INTEGER
   42     | CHAR
   43     | STRING
   44     | expr ADD expr
   45     | expr MINUS expr
   46     | expr MUL expr
   47     | expr DIV expr
   48     | expr MOD expr
   49     | expr EQ expr
   50     | expr NEQ expr
   51     | expr OR expr
   52     | expr AND expr
   53     | expr LESS expr
   54     | expr MORE expr
   55     | expr LESS_EQ expr
   56     | expr MORE_EQ expr
   57     | LPARE expr RPARE
   58     | ADD expr
   59     | MINUS expr
   60     | ADDR expr
   61     | NOT expr
   62     | expr PLUS
   63     | expr DESC

   64 T: T_INT
   65  | T_CHAR
   66  | T_BOOL
   67  | T_STRING
   68  | T_VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 65
T_INT (259) 14 64
T_STRING (260) 67
T_BOOL (261) 66
T_VOID (262) 15 68
IDENTIFIER (263) 12 16 17 18 19 20 21 36 37 38 39 40
INTEGER (264) 41
CHAR (265) 42
BOOL (266)
STRING (267) 33 35 43
ASSIGN (268) 12 17 18 19 20 21
SEMICOLON (269) 4 5 6 9 10 30 31
ADD (270) 18 44 58
MINUS (271) 19 45 59
MUL (272) 20 46
DIV (273) 21 47
MOD (274) 48
PLUS (275) 62
DESC (276) 63
ADDR (277) 38 39 60
COMMA (278) 33 35 36 38
LBRACE (279) 14 15 16 23 25 26 27 29 31
RBRACE (280) 14 15 16 23 25 26 27 29 31
LPARE (281) 14 15 16 30 31 33 34 35 57
RPARE (282) 14 15 16 30 31 33 34 35 57
PRINTF (283) 33 34
SCANF (284) 35
RETURN (285) 32
ELSE (286) 24 25 26 27
FOR (287) 30 31
WHILE (288) 28 29
IF (289) 22 23 24 25 26 27
MAIN (290) 14 15
AND (291) 52
OR (292) 51
NOT (293) 61
EQ (294) 49
NEQ (295) 50
MORE_EQ (296) 56
LESS_EQ (297) 55
MORE (298) 54
LESS (299) 53


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
statements (47)
    on left: 2 3, on right: 1 3 14 15 16 23 25 26 27 29 31
statement (48)
    on left: 4 5 6 7 8 9 10 11, on right: 2 3 22 24 25 27 28 30 31
declaration (49)
    on left: 12 13, on right: 5
function (50)
    on left: 14 15 16, on right: 11
assign_stmt (51)
    on left: 17 18 19 20 21, on right: 6
if_stmt (52)
    on left: 22 23 24 25 26 27, on right: 7
loop_stmt (53)
    on left: 28 29 30 31, on right: 8
return_stmt (54)
    on left: 32, on right: 9
io_stmt (55)
    on left: 33 34 35, on right: 10
IDENTIFIER_LIST (56)
    on left: 36 37 38 39, on right: 13 33 34 35 36 38
expr (57)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57
    58 59 60 61 62 63, on right: 12 17 18 19 20 21 22 23 24 25 26 27
    28 29 30 31 32 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59
    60 61 62 63
T (58)
    on left: 64 65 66 67 68, on right: 12 13 16


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    program      go to state 14
    statements   go to state 15
    statement    go to state 16
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 1

   65 T: T_CHAR .

    $default  reduce using rule 65 (T)


State 2

   14 function: T_INT . MAIN LPARE RPARE LBRACE statements RBRACE
   64 T: T_INT .

    MAIN  shift, and go to state 25

    $default  reduce using rule 64 (T)


State 3

   67 T: T_STRING .

    $default  reduce using rule 67 (T)


State 4

   66 T: T_BOOL .

    $default  reduce using rule 66 (T)


State 5

   15 function: T_VOID . MAIN LPARE RPARE LBRACE statements RBRACE
   68 T: T_VOID .

    MAIN  shift, and go to state 26

    $default  reduce using rule 68 (T)


State 6

   17 assign_stmt: IDENTIFIER . ASSIGN expr
   18            | IDENTIFIER . ADD ASSIGN expr
   19            | IDENTIFIER . MINUS ASSIGN expr
   20            | IDENTIFIER . MUL ASSIGN expr
   21            | IDENTIFIER . DIV ASSIGN expr

    ASSIGN  shift, and go to state 27
    ADD     shift, and go to state 28
    MINUS   shift, and go to state 29
    MUL     shift, and go to state 30
    DIV     shift, and go to state 31


State 7

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 8

   33 io_stmt: PRINTF . LPARE STRING COMMA IDENTIFIER_LIST RPARE
   34        | PRINTF . LPARE IDENTIFIER_LIST RPARE

    LPARE  shift, and go to state 32


State 9

   35 io_stmt: SCANF . LPARE STRING COMMA IDENTIFIER_LIST RPARE

    LPARE  shift, and go to state 33


State 10

   32 return_stmt: RETURN . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 43


State 11

   30 loop_stmt: FOR . LPARE statement expr SEMICOLON expr RPARE statement
   31          | FOR . LPARE statement expr SEMICOLON expr RPARE LBRACE statements RBRACE

    LPARE  shift, and go to state 44


State 12

   28 loop_stmt: WHILE . expr statement
   29          | WHILE . expr LBRACE statements RBRACE

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 45


State 13

   22 if_stmt: IF . expr statement
   23        | IF . expr LBRACE statements RBRACE
   24        | IF . expr statement ELSE statement
   25        | IF . expr LBRACE statements RBRACE ELSE statement
   26        | IF . expr LBRACE statements RBRACE ELSE LBRACE statements RBRACE
   27        | IF . expr statement ELSE LBRACE statements RBRACE

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 46


State 14

    0 $accept: program . $end

    $end  shift, and go to state 47


State 15

    1 program: statements .
    3 statements: statements . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    $default  reduce using rule 1 (program)

    statement    go to state 48
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 16

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 17

    5 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 18

   11 statement: function .

    $default  reduce using rule 11 (statement)


State 19

    6 statement: assign_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 20

    7 statement: if_stmt .

    $default  reduce using rule 7 (statement)


State 21

    8 statement: loop_stmt .

    $default  reduce using rule 8 (statement)


State 22

    9 statement: return_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 23

   10 statement: io_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 24

   12 declaration: T . IDENTIFIER ASSIGN expr
   13            | T . IDENTIFIER_LIST
   16 function: T . IDENTIFIER LPARE RPARE LBRACE statements RBRACE

    IDENTIFIER  shift, and go to state 53
    ADDR        shift, and go to state 54

    IDENTIFIER_LIST  go to state 55


State 25

   14 function: T_INT MAIN . LPARE RPARE LBRACE statements RBRACE

    LPARE  shift, and go to state 56


State 26

   15 function: T_VOID MAIN . LPARE RPARE LBRACE statements RBRACE

    LPARE  shift, and go to state 57


State 27

   17 assign_stmt: IDENTIFIER ASSIGN . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 58


State 28

   18 assign_stmt: IDENTIFIER ADD . ASSIGN expr

    ASSIGN  shift, and go to state 59


State 29

   19 assign_stmt: IDENTIFIER MINUS . ASSIGN expr

    ASSIGN  shift, and go to state 60


State 30

   20 assign_stmt: IDENTIFIER MUL . ASSIGN expr

    ASSIGN  shift, and go to state 61


State 31

   21 assign_stmt: IDENTIFIER DIV . ASSIGN expr

    ASSIGN  shift, and go to state 62


State 32

   33 io_stmt: PRINTF LPARE . STRING COMMA IDENTIFIER_LIST RPARE
   34        | PRINTF LPARE . IDENTIFIER_LIST RPARE

    IDENTIFIER  shift, and go to state 63
    STRING      shift, and go to state 64
    ADDR        shift, and go to state 54

    IDENTIFIER_LIST  go to state 65


State 33

   35 io_stmt: SCANF LPARE . STRING COMMA IDENTIFIER_LIST RPARE

    STRING  shift, and go to state 66


State 34

   40 expr: IDENTIFIER .

    $default  reduce using rule 40 (expr)


State 35

   41 expr: INTEGER .

    $default  reduce using rule 41 (expr)


State 36

   42 expr: CHAR .

    $default  reduce using rule 42 (expr)


State 37

   43 expr: STRING .

    $default  reduce using rule 43 (expr)


State 38

   58 expr: ADD . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 67


State 39

   59 expr: MINUS . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 68


State 40

   60 expr: ADDR . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 69


State 41

   57 expr: LPARE . expr RPARE

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 70


State 42

   61 expr: NOT . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 71


State 43

   32 return_stmt: RETURN expr .
   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    ADD      shift, and go to state 72
    MINUS    shift, and go to state 73
    MUL      shift, and go to state 74
    DIV      shift, and go to state 75
    MOD      shift, and go to state 76
    PLUS     shift, and go to state 77
    DESC     shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    EQ       shift, and go to state 81
    NEQ      shift, and go to state 82
    MORE_EQ  shift, and go to state 83
    LESS_EQ  shift, and go to state 84
    MORE     shift, and go to state 85
    LESS     shift, and go to state 86

    $default  reduce using rule 32 (return_stmt)


State 44

   30 loop_stmt: FOR LPARE . statement expr SEMICOLON expr RPARE statement
   31          | FOR LPARE . statement expr SEMICOLON expr RPARE LBRACE statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    statement    go to state 87
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 45

   28 loop_stmt: WHILE expr . statement
   29          | WHILE expr . LBRACE statements RBRACE
   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    ADD         shift, and go to state 72
    MINUS       shift, and go to state 73
    MUL         shift, and go to state 74
    DIV         shift, and go to state 75
    MOD         shift, and go to state 76
    PLUS        shift, and go to state 77
    DESC        shift, and go to state 78
    LBRACE      shift, and go to state 88
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13
    AND         shift, and go to state 79
    OR          shift, and go to state 80
    EQ          shift, and go to state 81
    NEQ         shift, and go to state 82
    MORE_EQ     shift, and go to state 83
    LESS_EQ     shift, and go to state 84
    MORE        shift, and go to state 85
    LESS        shift, and go to state 86

    statement    go to state 89
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 46

   22 if_stmt: IF expr . statement
   23        | IF expr . LBRACE statements RBRACE
   24        | IF expr . statement ELSE statement
   25        | IF expr . LBRACE statements RBRACE ELSE statement
   26        | IF expr . LBRACE statements RBRACE ELSE LBRACE statements RBRACE
   27        | IF expr . statement ELSE LBRACE statements RBRACE
   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    ADD         shift, and go to state 72
    MINUS       shift, and go to state 73
    MUL         shift, and go to state 74
    DIV         shift, and go to state 75
    MOD         shift, and go to state 76
    PLUS        shift, and go to state 77
    DESC        shift, and go to state 78
    LBRACE      shift, and go to state 90
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13
    AND         shift, and go to state 79
    OR          shift, and go to state 80
    EQ          shift, and go to state 81
    NEQ         shift, and go to state 82
    MORE_EQ     shift, and go to state 83
    LESS_EQ     shift, and go to state 84
    MORE        shift, and go to state 85
    LESS        shift, and go to state 86

    statement    go to state 91
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 47

    0 $accept: program $end .

    $default  accept


State 48

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 49

    5 statement: declaration SEMICOLON .

    $default  reduce using rule 5 (statement)


State 50

    6 statement: assign_stmt SEMICOLON .

    $default  reduce using rule 6 (statement)


State 51

    9 statement: return_stmt SEMICOLON .

    $default  reduce using rule 9 (statement)


State 52

   10 statement: io_stmt SEMICOLON .

    $default  reduce using rule 10 (statement)


State 53

   12 declaration: T IDENTIFIER . ASSIGN expr
   16 function: T IDENTIFIER . LPARE RPARE LBRACE statements RBRACE
   37 IDENTIFIER_LIST: IDENTIFIER .

    ASSIGN  shift, and go to state 92
    LPARE   shift, and go to state 93

    $default  reduce using rule 37 (IDENTIFIER_LIST)


State 54

   39 IDENTIFIER_LIST: ADDR . IDENTIFIER

    IDENTIFIER  shift, and go to state 94


State 55

   13 declaration: T IDENTIFIER_LIST .
   36 IDENTIFIER_LIST: IDENTIFIER_LIST . COMMA IDENTIFIER
   38                | IDENTIFIER_LIST . COMMA ADDR IDENTIFIER

    COMMA  shift, and go to state 95

    $default  reduce using rule 13 (declaration)


State 56

   14 function: T_INT MAIN LPARE . RPARE LBRACE statements RBRACE

    RPARE  shift, and go to state 96


State 57

   15 function: T_VOID MAIN LPARE . RPARE LBRACE statements RBRACE

    RPARE  shift, and go to state 97


State 58

   17 assign_stmt: IDENTIFIER ASSIGN expr .
   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    ADD      shift, and go to state 72
    MINUS    shift, and go to state 73
    MUL      shift, and go to state 74
    DIV      shift, and go to state 75
    MOD      shift, and go to state 76
    PLUS     shift, and go to state 77
    DESC     shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    EQ       shift, and go to state 81
    NEQ      shift, and go to state 82
    MORE_EQ  shift, and go to state 83
    LESS_EQ  shift, and go to state 84
    MORE     shift, and go to state 85
    LESS     shift, and go to state 86

    $default  reduce using rule 17 (assign_stmt)


State 59

   18 assign_stmt: IDENTIFIER ADD ASSIGN . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 98


State 60

   19 assign_stmt: IDENTIFIER MINUS ASSIGN . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 99


State 61

   20 assign_stmt: IDENTIFIER MUL ASSIGN . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 100


State 62

   21 assign_stmt: IDENTIFIER DIV ASSIGN . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 101


State 63

   37 IDENTIFIER_LIST: IDENTIFIER .

    $default  reduce using rule 37 (IDENTIFIER_LIST)


State 64

   33 io_stmt: PRINTF LPARE STRING . COMMA IDENTIFIER_LIST RPARE

    COMMA  shift, and go to state 102


State 65

   34 io_stmt: PRINTF LPARE IDENTIFIER_LIST . RPARE
   36 IDENTIFIER_LIST: IDENTIFIER_LIST . COMMA IDENTIFIER
   38                | IDENTIFIER_LIST . COMMA ADDR IDENTIFIER

    COMMA  shift, and go to state 95
    RPARE  shift, and go to state 103


State 66

   35 io_stmt: SCANF LPARE STRING . COMMA IDENTIFIER_LIST RPARE

    COMMA  shift, and go to state 104


State 67

   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   58     | ADD expr .
   62     | expr . PLUS
   63     | expr . DESC

    MUL   shift, and go to state 74
    DIV   shift, and go to state 75
    MOD   shift, and go to state 76
    PLUS  shift, and go to state 77
    DESC  shift, and go to state 78
    AND   shift, and go to state 79
    OR    shift, and go to state 80

    MOD       [reduce using rule 58 (expr)]
    PLUS      [reduce using rule 58 (expr)]
    DESC      [reduce using rule 58 (expr)]
    AND       [reduce using rule 58 (expr)]
    OR        [reduce using rule 58 (expr)]
    $default  reduce using rule 58 (expr)


State 68

   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   59     | MINUS expr .
   62     | expr . PLUS
   63     | expr . DESC

    MUL   shift, and go to state 74
    DIV   shift, and go to state 75
    MOD   shift, and go to state 76
    PLUS  shift, and go to state 77
    DESC  shift, and go to state 78
    AND   shift, and go to state 79
    OR    shift, and go to state 80

    MOD       [reduce using rule 59 (expr)]
    PLUS      [reduce using rule 59 (expr)]
    DESC      [reduce using rule 59 (expr)]
    AND       [reduce using rule 59 (expr)]
    OR        [reduce using rule 59 (expr)]
    $default  reduce using rule 59 (expr)


State 69

   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   60     | ADDR expr .
   62     | expr . PLUS
   63     | expr . DESC

    ADD      shift, and go to state 72
    MINUS    shift, and go to state 73
    MUL      shift, and go to state 74
    DIV      shift, and go to state 75
    MOD      shift, and go to state 76
    PLUS     shift, and go to state 77
    DESC     shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    EQ       shift, and go to state 81
    NEQ      shift, and go to state 82
    MORE_EQ  shift, and go to state 83
    LESS_EQ  shift, and go to state 84
    MORE     shift, and go to state 85
    LESS     shift, and go to state 86

    ADD       [reduce using rule 60 (expr)]
    MINUS     [reduce using rule 60 (expr)]
    MUL       [reduce using rule 60 (expr)]
    DIV       [reduce using rule 60 (expr)]
    MOD       [reduce using rule 60 (expr)]
    PLUS      [reduce using rule 60 (expr)]
    DESC      [reduce using rule 60 (expr)]
    AND       [reduce using rule 60 (expr)]
    OR        [reduce using rule 60 (expr)]
    EQ        [reduce using rule 60 (expr)]
    NEQ       [reduce using rule 60 (expr)]
    MORE_EQ   [reduce using rule 60 (expr)]
    LESS_EQ   [reduce using rule 60 (expr)]
    MORE      [reduce using rule 60 (expr)]
    LESS      [reduce using rule 60 (expr)]
    $default  reduce using rule 60 (expr)


State 70

   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   57     | LPARE expr . RPARE
   62     | expr . PLUS
   63     | expr . DESC

    ADD      shift, and go to state 72
    MINUS    shift, and go to state 73
    MUL      shift, and go to state 74
    DIV      shift, and go to state 75
    MOD      shift, and go to state 76
    PLUS     shift, and go to state 77
    DESC     shift, and go to state 78
    RPARE    shift, and go to state 105
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    EQ       shift, and go to state 81
    NEQ      shift, and go to state 82
    MORE_EQ  shift, and go to state 83
    LESS_EQ  shift, and go to state 84
    MORE     shift, and go to state 85
    LESS     shift, and go to state 86


State 71

   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   61     | NOT expr .
   62     | expr . PLUS
   63     | expr . DESC

    ADD      shift, and go to state 72
    MINUS    shift, and go to state 73
    MUL      shift, and go to state 74
    DIV      shift, and go to state 75
    MOD      shift, and go to state 76
    PLUS     shift, and go to state 77
    DESC     shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    EQ       shift, and go to state 81
    NEQ      shift, and go to state 82
    MORE_EQ  shift, and go to state 83
    LESS_EQ  shift, and go to state 84
    MORE     shift, and go to state 85
    LESS     shift, and go to state 86

    ADD       [reduce using rule 61 (expr)]
    MINUS     [reduce using rule 61 (expr)]
    MUL       [reduce using rule 61 (expr)]
    DIV       [reduce using rule 61 (expr)]
    MOD       [reduce using rule 61 (expr)]
    PLUS      [reduce using rule 61 (expr)]
    DESC      [reduce using rule 61 (expr)]
    AND       [reduce using rule 61 (expr)]
    OR        [reduce using rule 61 (expr)]
    EQ        [reduce using rule 61 (expr)]
    NEQ       [reduce using rule 61 (expr)]
    MORE_EQ   [reduce using rule 61 (expr)]
    LESS_EQ   [reduce using rule 61 (expr)]
    MORE      [reduce using rule 61 (expr)]
    LESS      [reduce using rule 61 (expr)]
    $default  reduce using rule 61 (expr)


State 72

   44 expr: expr ADD . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 106


State 73

   45 expr: expr MINUS . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 107


State 74

   46 expr: expr MUL . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 108


State 75

   47 expr: expr DIV . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 109


State 76

   48 expr: expr MOD . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 110


State 77

   62 expr: expr PLUS .

    $default  reduce using rule 62 (expr)


State 78

   63 expr: expr DESC .

    $default  reduce using rule 63 (expr)


State 79

   52 expr: expr AND . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 111


State 80

   51 expr: expr OR . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 112


State 81

   49 expr: expr EQ . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 113


State 82

   50 expr: expr NEQ . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 114


State 83

   56 expr: expr MORE_EQ . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 115


State 84

   55 expr: expr LESS_EQ . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 116


State 85

   54 expr: expr MORE . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 117


State 86

   53 expr: expr LESS . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 118


State 87

   30 loop_stmt: FOR LPARE statement . expr SEMICOLON expr RPARE statement
   31          | FOR LPARE statement . expr SEMICOLON expr RPARE LBRACE statements RBRACE

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 119


State 88

   29 loop_stmt: WHILE expr LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    statements   go to state 120
    statement    go to state 16
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 89

   28 loop_stmt: WHILE expr statement .

    $default  reduce using rule 28 (loop_stmt)


State 90

   23 if_stmt: IF expr LBRACE . statements RBRACE
   25        | IF expr LBRACE . statements RBRACE ELSE statement
   26        | IF expr LBRACE . statements RBRACE ELSE LBRACE statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    statements   go to state 121
    statement    go to state 16
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 91

   22 if_stmt: IF expr statement .
   24        | IF expr statement . ELSE statement
   27        | IF expr statement . ELSE LBRACE statements RBRACE

    ELSE  shift, and go to state 122

    ELSE      [reduce using rule 22 (if_stmt)]
    $default  reduce using rule 22 (if_stmt)


State 92

   12 declaration: T IDENTIFIER ASSIGN . expr

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 123


State 93

   16 function: T IDENTIFIER LPARE . RPARE LBRACE statements RBRACE

    RPARE  shift, and go to state 124


State 94

   39 IDENTIFIER_LIST: ADDR IDENTIFIER .

    $default  reduce using rule 39 (IDENTIFIER_LIST)


State 95

   36 IDENTIFIER_LIST: IDENTIFIER_LIST COMMA . IDENTIFIER
   38                | IDENTIFIER_LIST COMMA . ADDR IDENTIFIER

    IDENTIFIER  shift, and go to state 125
    ADDR        shift, and go to state 126


State 96

   14 function: T_INT MAIN LPARE RPARE . LBRACE statements RBRACE

    LBRACE  shift, and go to state 127


State 97

   15 function: T_VOID MAIN LPARE RPARE . LBRACE statements RBRACE

    LBRACE  shift, and go to state 128


State 98

   18 assign_stmt: IDENTIFIER ADD ASSIGN expr .
   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    ADD      shift, and go to state 72
    MINUS    shift, and go to state 73
    MUL      shift, and go to state 74
    DIV      shift, and go to state 75
    MOD      shift, and go to state 76
    PLUS     shift, and go to state 77
    DESC     shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    EQ       shift, and go to state 81
    NEQ      shift, and go to state 82
    MORE_EQ  shift, and go to state 83
    LESS_EQ  shift, and go to state 84
    MORE     shift, and go to state 85
    LESS     shift, and go to state 86

    $default  reduce using rule 18 (assign_stmt)


State 99

   19 assign_stmt: IDENTIFIER MINUS ASSIGN expr .
   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    ADD      shift, and go to state 72
    MINUS    shift, and go to state 73
    MUL      shift, and go to state 74
    DIV      shift, and go to state 75
    MOD      shift, and go to state 76
    PLUS     shift, and go to state 77
    DESC     shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    EQ       shift, and go to state 81
    NEQ      shift, and go to state 82
    MORE_EQ  shift, and go to state 83
    LESS_EQ  shift, and go to state 84
    MORE     shift, and go to state 85
    LESS     shift, and go to state 86

    $default  reduce using rule 19 (assign_stmt)


State 100

   20 assign_stmt: IDENTIFIER MUL ASSIGN expr .
   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    ADD      shift, and go to state 72
    MINUS    shift, and go to state 73
    MUL      shift, and go to state 74
    DIV      shift, and go to state 75
    MOD      shift, and go to state 76
    PLUS     shift, and go to state 77
    DESC     shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    EQ       shift, and go to state 81
    NEQ      shift, and go to state 82
    MORE_EQ  shift, and go to state 83
    LESS_EQ  shift, and go to state 84
    MORE     shift, and go to state 85
    LESS     shift, and go to state 86

    $default  reduce using rule 20 (assign_stmt)


State 101

   21 assign_stmt: IDENTIFIER DIV ASSIGN expr .
   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    ADD      shift, and go to state 72
    MINUS    shift, and go to state 73
    MUL      shift, and go to state 74
    DIV      shift, and go to state 75
    MOD      shift, and go to state 76
    PLUS     shift, and go to state 77
    DESC     shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    EQ       shift, and go to state 81
    NEQ      shift, and go to state 82
    MORE_EQ  shift, and go to state 83
    LESS_EQ  shift, and go to state 84
    MORE     shift, and go to state 85
    LESS     shift, and go to state 86

    $default  reduce using rule 21 (assign_stmt)


State 102

   33 io_stmt: PRINTF LPARE STRING COMMA . IDENTIFIER_LIST RPARE

    IDENTIFIER  shift, and go to state 63
    ADDR        shift, and go to state 54

    IDENTIFIER_LIST  go to state 129


State 103

   34 io_stmt: PRINTF LPARE IDENTIFIER_LIST RPARE .

    $default  reduce using rule 34 (io_stmt)


State 104

   35 io_stmt: SCANF LPARE STRING COMMA . IDENTIFIER_LIST RPARE

    IDENTIFIER  shift, and go to state 63
    ADDR        shift, and go to state 54

    IDENTIFIER_LIST  go to state 130


State 105

   57 expr: LPARE expr RPARE .

    $default  reduce using rule 57 (expr)


State 106

   44 expr: expr . ADD expr
   44     | expr ADD expr .
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    MUL   shift, and go to state 74
    DIV   shift, and go to state 75
    MOD   shift, and go to state 76
    PLUS  shift, and go to state 77
    DESC  shift, and go to state 78
    AND   shift, and go to state 79
    OR    shift, and go to state 80

    MOD       [reduce using rule 44 (expr)]
    PLUS      [reduce using rule 44 (expr)]
    DESC      [reduce using rule 44 (expr)]
    AND       [reduce using rule 44 (expr)]
    OR        [reduce using rule 44 (expr)]
    $default  reduce using rule 44 (expr)


State 107

   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   45     | expr MINUS expr .
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    MUL   shift, and go to state 74
    DIV   shift, and go to state 75
    MOD   shift, and go to state 76
    PLUS  shift, and go to state 77
    DESC  shift, and go to state 78
    AND   shift, and go to state 79
    OR    shift, and go to state 80

    MOD       [reduce using rule 45 (expr)]
    PLUS      [reduce using rule 45 (expr)]
    DESC      [reduce using rule 45 (expr)]
    AND       [reduce using rule 45 (expr)]
    OR        [reduce using rule 45 (expr)]
    $default  reduce using rule 45 (expr)


State 108

   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   46     | expr MUL expr .
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    MOD   shift, and go to state 76
    PLUS  shift, and go to state 77
    DESC  shift, and go to state 78
    AND   shift, and go to state 79
    OR    shift, and go to state 80

    MOD       [reduce using rule 46 (expr)]
    PLUS      [reduce using rule 46 (expr)]
    DESC      [reduce using rule 46 (expr)]
    AND       [reduce using rule 46 (expr)]
    OR        [reduce using rule 46 (expr)]
    $default  reduce using rule 46 (expr)


State 109

   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   47     | expr DIV expr .
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    MOD   shift, and go to state 76
    PLUS  shift, and go to state 77
    DESC  shift, and go to state 78
    AND   shift, and go to state 79
    OR    shift, and go to state 80

    MOD       [reduce using rule 47 (expr)]
    PLUS      [reduce using rule 47 (expr)]
    DESC      [reduce using rule 47 (expr)]
    AND       [reduce using rule 47 (expr)]
    OR        [reduce using rule 47 (expr)]
    $default  reduce using rule 47 (expr)


State 110

   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   48     | expr MOD expr .
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    ADD      shift, and go to state 72
    MINUS    shift, and go to state 73
    MUL      shift, and go to state 74
    DIV      shift, and go to state 75
    MOD      shift, and go to state 76
    PLUS     shift, and go to state 77
    DESC     shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    EQ       shift, and go to state 81
    NEQ      shift, and go to state 82
    MORE_EQ  shift, and go to state 83
    LESS_EQ  shift, and go to state 84
    MORE     shift, and go to state 85
    LESS     shift, and go to state 86

    ADD       [reduce using rule 48 (expr)]
    MINUS     [reduce using rule 48 (expr)]
    MUL       [reduce using rule 48 (expr)]
    DIV       [reduce using rule 48 (expr)]
    MOD       [reduce using rule 48 (expr)]
    PLUS      [reduce using rule 48 (expr)]
    DESC      [reduce using rule 48 (expr)]
    AND       [reduce using rule 48 (expr)]
    OR        [reduce using rule 48 (expr)]
    EQ        [reduce using rule 48 (expr)]
    NEQ       [reduce using rule 48 (expr)]
    MORE_EQ   [reduce using rule 48 (expr)]
    LESS_EQ   [reduce using rule 48 (expr)]
    MORE      [reduce using rule 48 (expr)]
    LESS      [reduce using rule 48 (expr)]
    $default  reduce using rule 48 (expr)


State 111

   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   52     | expr AND expr .
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    ADD      shift, and go to state 72
    MINUS    shift, and go to state 73
    MUL      shift, and go to state 74
    DIV      shift, and go to state 75
    MOD      shift, and go to state 76
    PLUS     shift, and go to state 77
    DESC     shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    EQ       shift, and go to state 81
    NEQ      shift, and go to state 82
    MORE_EQ  shift, and go to state 83
    LESS_EQ  shift, and go to state 84
    MORE     shift, and go to state 85
    LESS     shift, and go to state 86

    ADD       [reduce using rule 52 (expr)]
    MINUS     [reduce using rule 52 (expr)]
    MUL       [reduce using rule 52 (expr)]
    DIV       [reduce using rule 52 (expr)]
    MOD       [reduce using rule 52 (expr)]
    PLUS      [reduce using rule 52 (expr)]
    DESC      [reduce using rule 52 (expr)]
    AND       [reduce using rule 52 (expr)]
    OR        [reduce using rule 52 (expr)]
    EQ        [reduce using rule 52 (expr)]
    NEQ       [reduce using rule 52 (expr)]
    MORE_EQ   [reduce using rule 52 (expr)]
    LESS_EQ   [reduce using rule 52 (expr)]
    MORE      [reduce using rule 52 (expr)]
    LESS      [reduce using rule 52 (expr)]
    $default  reduce using rule 52 (expr)


State 112

   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   51     | expr OR expr .
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    ADD      shift, and go to state 72
    MINUS    shift, and go to state 73
    MUL      shift, and go to state 74
    DIV      shift, and go to state 75
    MOD      shift, and go to state 76
    PLUS     shift, and go to state 77
    DESC     shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    EQ       shift, and go to state 81
    NEQ      shift, and go to state 82
    MORE_EQ  shift, and go to state 83
    LESS_EQ  shift, and go to state 84
    MORE     shift, and go to state 85
    LESS     shift, and go to state 86

    ADD       [reduce using rule 51 (expr)]
    MINUS     [reduce using rule 51 (expr)]
    MUL       [reduce using rule 51 (expr)]
    DIV       [reduce using rule 51 (expr)]
    MOD       [reduce using rule 51 (expr)]
    PLUS      [reduce using rule 51 (expr)]
    DESC      [reduce using rule 51 (expr)]
    AND       [reduce using rule 51 (expr)]
    OR        [reduce using rule 51 (expr)]
    EQ        [reduce using rule 51 (expr)]
    NEQ       [reduce using rule 51 (expr)]
    MORE_EQ   [reduce using rule 51 (expr)]
    LESS_EQ   [reduce using rule 51 (expr)]
    MORE      [reduce using rule 51 (expr)]
    LESS      [reduce using rule 51 (expr)]
    $default  reduce using rule 51 (expr)


State 113

   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   49     | expr EQ expr .
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    ADD    shift, and go to state 72
    MINUS  shift, and go to state 73
    MUL    shift, and go to state 74
    DIV    shift, and go to state 75
    MOD    shift, and go to state 76
    PLUS   shift, and go to state 77
    DESC   shift, and go to state 78
    AND    shift, and go to state 79
    OR     shift, and go to state 80

    MOD       [reduce using rule 49 (expr)]
    PLUS      [reduce using rule 49 (expr)]
    DESC      [reduce using rule 49 (expr)]
    AND       [reduce using rule 49 (expr)]
    OR        [reduce using rule 49 (expr)]
    $default  reduce using rule 49 (expr)


State 114

   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   50     | expr NEQ expr .
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    ADD    shift, and go to state 72
    MINUS  shift, and go to state 73
    MUL    shift, and go to state 74
    DIV    shift, and go to state 75
    MOD    shift, and go to state 76
    PLUS   shift, and go to state 77
    DESC   shift, and go to state 78
    AND    shift, and go to state 79
    OR     shift, and go to state 80

    MOD       [reduce using rule 50 (expr)]
    PLUS      [reduce using rule 50 (expr)]
    DESC      [reduce using rule 50 (expr)]
    AND       [reduce using rule 50 (expr)]
    OR        [reduce using rule 50 (expr)]
    $default  reduce using rule 50 (expr)


State 115

   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   56     | expr MORE_EQ expr .
   62     | expr . PLUS
   63     | expr . DESC

    ADD    shift, and go to state 72
    MINUS  shift, and go to state 73
    MUL    shift, and go to state 74
    DIV    shift, and go to state 75
    MOD    shift, and go to state 76
    PLUS   shift, and go to state 77
    DESC   shift, and go to state 78
    AND    shift, and go to state 79
    OR     shift, and go to state 80

    MOD       [reduce using rule 56 (expr)]
    PLUS      [reduce using rule 56 (expr)]
    DESC      [reduce using rule 56 (expr)]
    AND       [reduce using rule 56 (expr)]
    OR        [reduce using rule 56 (expr)]
    $default  reduce using rule 56 (expr)


State 116

   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   55     | expr LESS_EQ expr .
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    ADD    shift, and go to state 72
    MINUS  shift, and go to state 73
    MUL    shift, and go to state 74
    DIV    shift, and go to state 75
    MOD    shift, and go to state 76
    PLUS   shift, and go to state 77
    DESC   shift, and go to state 78
    AND    shift, and go to state 79
    OR     shift, and go to state 80

    MOD       [reduce using rule 55 (expr)]
    PLUS      [reduce using rule 55 (expr)]
    DESC      [reduce using rule 55 (expr)]
    AND       [reduce using rule 55 (expr)]
    OR        [reduce using rule 55 (expr)]
    $default  reduce using rule 55 (expr)


State 117

   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   54     | expr MORE expr .
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    ADD    shift, and go to state 72
    MINUS  shift, and go to state 73
    MUL    shift, and go to state 74
    DIV    shift, and go to state 75
    MOD    shift, and go to state 76
    PLUS   shift, and go to state 77
    DESC   shift, and go to state 78
    AND    shift, and go to state 79
    OR     shift, and go to state 80

    MOD       [reduce using rule 54 (expr)]
    PLUS      [reduce using rule 54 (expr)]
    DESC      [reduce using rule 54 (expr)]
    AND       [reduce using rule 54 (expr)]
    OR        [reduce using rule 54 (expr)]
    $default  reduce using rule 54 (expr)


State 118

   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   53     | expr LESS expr .
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    ADD    shift, and go to state 72
    MINUS  shift, and go to state 73
    MUL    shift, and go to state 74
    DIV    shift, and go to state 75
    MOD    shift, and go to state 76
    PLUS   shift, and go to state 77
    DESC   shift, and go to state 78
    AND    shift, and go to state 79
    OR     shift, and go to state 80

    MOD       [reduce using rule 53 (expr)]
    PLUS      [reduce using rule 53 (expr)]
    DESC      [reduce using rule 53 (expr)]
    AND       [reduce using rule 53 (expr)]
    OR        [reduce using rule 53 (expr)]
    $default  reduce using rule 53 (expr)


State 119

   30 loop_stmt: FOR LPARE statement expr . SEMICOLON expr RPARE statement
   31          | FOR LPARE statement expr . SEMICOLON expr RPARE LBRACE statements RBRACE
   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    SEMICOLON  shift, and go to state 131
    ADD        shift, and go to state 72
    MINUS      shift, and go to state 73
    MUL        shift, and go to state 74
    DIV        shift, and go to state 75
    MOD        shift, and go to state 76
    PLUS       shift, and go to state 77
    DESC       shift, and go to state 78
    AND        shift, and go to state 79
    OR         shift, and go to state 80
    EQ         shift, and go to state 81
    NEQ        shift, and go to state 82
    MORE_EQ    shift, and go to state 83
    LESS_EQ    shift, and go to state 84
    MORE       shift, and go to state 85
    LESS       shift, and go to state 86


State 120

    3 statements: statements . statement
   29 loop_stmt: WHILE expr LBRACE statements . RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    RBRACE      shift, and go to state 132
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    statement    go to state 48
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 121

    3 statements: statements . statement
   23 if_stmt: IF expr LBRACE statements . RBRACE
   25        | IF expr LBRACE statements . RBRACE ELSE statement
   26        | IF expr LBRACE statements . RBRACE ELSE LBRACE statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    RBRACE      shift, and go to state 133
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    statement    go to state 48
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 122

   24 if_stmt: IF expr statement ELSE . statement
   27        | IF expr statement ELSE . LBRACE statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    LBRACE      shift, and go to state 134
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    statement    go to state 135
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 123

   12 declaration: T IDENTIFIER ASSIGN expr .
   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    ADD      shift, and go to state 72
    MINUS    shift, and go to state 73
    MUL      shift, and go to state 74
    DIV      shift, and go to state 75
    MOD      shift, and go to state 76
    PLUS     shift, and go to state 77
    DESC     shift, and go to state 78
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    EQ       shift, and go to state 81
    NEQ      shift, and go to state 82
    MORE_EQ  shift, and go to state 83
    LESS_EQ  shift, and go to state 84
    MORE     shift, and go to state 85
    LESS     shift, and go to state 86

    $default  reduce using rule 12 (declaration)


State 124

   16 function: T IDENTIFIER LPARE RPARE . LBRACE statements RBRACE

    LBRACE  shift, and go to state 136


State 125

   36 IDENTIFIER_LIST: IDENTIFIER_LIST COMMA IDENTIFIER .

    $default  reduce using rule 36 (IDENTIFIER_LIST)


State 126

   38 IDENTIFIER_LIST: IDENTIFIER_LIST COMMA ADDR . IDENTIFIER

    IDENTIFIER  shift, and go to state 137


State 127

   14 function: T_INT MAIN LPARE RPARE LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    statements   go to state 138
    statement    go to state 16
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 128

   15 function: T_VOID MAIN LPARE RPARE LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    statements   go to state 139
    statement    go to state 16
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 129

   33 io_stmt: PRINTF LPARE STRING COMMA IDENTIFIER_LIST . RPARE
   36 IDENTIFIER_LIST: IDENTIFIER_LIST . COMMA IDENTIFIER
   38                | IDENTIFIER_LIST . COMMA ADDR IDENTIFIER

    COMMA  shift, and go to state 95
    RPARE  shift, and go to state 140


State 130

   35 io_stmt: SCANF LPARE STRING COMMA IDENTIFIER_LIST . RPARE
   36 IDENTIFIER_LIST: IDENTIFIER_LIST . COMMA IDENTIFIER
   38                | IDENTIFIER_LIST . COMMA ADDR IDENTIFIER

    COMMA  shift, and go to state 95
    RPARE  shift, and go to state 141


State 131

   30 loop_stmt: FOR LPARE statement expr SEMICOLON . expr RPARE statement
   31          | FOR LPARE statement expr SEMICOLON . expr RPARE LBRACE statements RBRACE

    IDENTIFIER  shift, and go to state 34
    INTEGER     shift, and go to state 35
    CHAR        shift, and go to state 36
    STRING      shift, and go to state 37
    ADD         shift, and go to state 38
    MINUS       shift, and go to state 39
    ADDR        shift, and go to state 40
    LPARE       shift, and go to state 41
    NOT         shift, and go to state 42

    expr  go to state 142


State 132

   29 loop_stmt: WHILE expr LBRACE statements RBRACE .

    $default  reduce using rule 29 (loop_stmt)


State 133

   23 if_stmt: IF expr LBRACE statements RBRACE .
   25        | IF expr LBRACE statements RBRACE . ELSE statement
   26        | IF expr LBRACE statements RBRACE . ELSE LBRACE statements RBRACE

    ELSE  shift, and go to state 143

    ELSE      [reduce using rule 23 (if_stmt)]
    $default  reduce using rule 23 (if_stmt)


State 134

   27 if_stmt: IF expr statement ELSE LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    statements   go to state 144
    statement    go to state 16
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 135

   24 if_stmt: IF expr statement ELSE statement .

    $default  reduce using rule 24 (if_stmt)


State 136

   16 function: T IDENTIFIER LPARE RPARE LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    statements   go to state 145
    statement    go to state 16
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 137

   38 IDENTIFIER_LIST: IDENTIFIER_LIST COMMA ADDR IDENTIFIER .

    $default  reduce using rule 38 (IDENTIFIER_LIST)


State 138

    3 statements: statements . statement
   14 function: T_INT MAIN LPARE RPARE LBRACE statements . RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    RBRACE      shift, and go to state 146
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    statement    go to state 48
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 139

    3 statements: statements . statement
   15 function: T_VOID MAIN LPARE RPARE LBRACE statements . RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    RBRACE      shift, and go to state 147
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    statement    go to state 48
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 140

   33 io_stmt: PRINTF LPARE STRING COMMA IDENTIFIER_LIST RPARE .

    $default  reduce using rule 33 (io_stmt)


State 141

   35 io_stmt: SCANF LPARE STRING COMMA IDENTIFIER_LIST RPARE .

    $default  reduce using rule 35 (io_stmt)


State 142

   30 loop_stmt: FOR LPARE statement expr SEMICOLON expr . RPARE statement
   31          | FOR LPARE statement expr SEMICOLON expr . RPARE LBRACE statements RBRACE
   44 expr: expr . ADD expr
   45     | expr . MINUS expr
   46     | expr . MUL expr
   47     | expr . DIV expr
   48     | expr . MOD expr
   49     | expr . EQ expr
   50     | expr . NEQ expr
   51     | expr . OR expr
   52     | expr . AND expr
   53     | expr . LESS expr
   54     | expr . MORE expr
   55     | expr . LESS_EQ expr
   56     | expr . MORE_EQ expr
   62     | expr . PLUS
   63     | expr . DESC

    ADD      shift, and go to state 72
    MINUS    shift, and go to state 73
    MUL      shift, and go to state 74
    DIV      shift, and go to state 75
    MOD      shift, and go to state 76
    PLUS     shift, and go to state 77
    DESC     shift, and go to state 78
    RPARE    shift, and go to state 148
    AND      shift, and go to state 79
    OR       shift, and go to state 80
    EQ       shift, and go to state 81
    NEQ      shift, and go to state 82
    MORE_EQ  shift, and go to state 83
    LESS_EQ  shift, and go to state 84
    MORE     shift, and go to state 85
    LESS     shift, and go to state 86


State 143

   25 if_stmt: IF expr LBRACE statements RBRACE ELSE . statement
   26        | IF expr LBRACE statements RBRACE ELSE . LBRACE statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    LBRACE      shift, and go to state 149
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    statement    go to state 150
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 144

    3 statements: statements . statement
   27 if_stmt: IF expr statement ELSE LBRACE statements . RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    RBRACE      shift, and go to state 151
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    statement    go to state 48
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 145

    3 statements: statements . statement
   16 function: T IDENTIFIER LPARE RPARE LBRACE statements . RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    RBRACE      shift, and go to state 152
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    statement    go to state 48
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 146

   14 function: T_INT MAIN LPARE RPARE LBRACE statements RBRACE .

    $default  reduce using rule 14 (function)


State 147

   15 function: T_VOID MAIN LPARE RPARE LBRACE statements RBRACE .

    $default  reduce using rule 15 (function)


State 148

   30 loop_stmt: FOR LPARE statement expr SEMICOLON expr RPARE . statement
   31          | FOR LPARE statement expr SEMICOLON expr RPARE . LBRACE statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    LBRACE      shift, and go to state 153
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    statement    go to state 154
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 149

   26 if_stmt: IF expr LBRACE statements RBRACE ELSE LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    statements   go to state 155
    statement    go to state 16
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 150

   25 if_stmt: IF expr LBRACE statements RBRACE ELSE statement .

    $default  reduce using rule 25 (if_stmt)


State 151

   27 if_stmt: IF expr statement ELSE LBRACE statements RBRACE .

    $default  reduce using rule 27 (if_stmt)


State 152

   16 function: T IDENTIFIER LPARE RPARE LBRACE statements RBRACE .

    $default  reduce using rule 16 (function)


State 153

   31 loop_stmt: FOR LPARE statement expr SEMICOLON expr RPARE LBRACE . statements RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    statements   go to state 156
    statement    go to state 16
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 154

   30 loop_stmt: FOR LPARE statement expr SEMICOLON expr RPARE statement .

    $default  reduce using rule 30 (loop_stmt)


State 155

    3 statements: statements . statement
   26 if_stmt: IF expr LBRACE statements RBRACE ELSE LBRACE statements . RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    RBRACE      shift, and go to state 157
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    statement    go to state 48
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 156

    3 statements: statements . statement
   31 loop_stmt: FOR LPARE statement expr SEMICOLON expr RPARE LBRACE statements . RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IDENTIFIER  shift, and go to state 6
    SEMICOLON   shift, and go to state 7
    RBRACE      shift, and go to state 158
    PRINTF      shift, and go to state 8
    SCANF       shift, and go to state 9
    RETURN      shift, and go to state 10
    FOR         shift, and go to state 11
    WHILE       shift, and go to state 12
    IF          shift, and go to state 13

    statement    go to state 48
    declaration  go to state 17
    function     go to state 18
    assign_stmt  go to state 19
    if_stmt      go to state 20
    loop_stmt    go to state 21
    return_stmt  go to state 22
    io_stmt      go to state 23
    T            go to state 24


State 157

   26 if_stmt: IF expr LBRACE statements RBRACE ELSE LBRACE statements RBRACE .

    $default  reduce using rule 26 (if_stmt)


State 158

   31 loop_stmt: FOR LPARE statement expr SEMICOLON expr RPARE LBRACE statements RBRACE .

    $default  reduce using rule 31 (loop_stmt)
